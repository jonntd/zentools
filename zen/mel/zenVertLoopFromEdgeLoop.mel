//given an ordered edge loop, return an ordered vert loop
global proc string[] zenVertLoopFromEdgeLoop(string $edges[])
{	
		if(size($edges)<2)
			return(ls("-fl",polyListComponentConversion("-tv",$edges[0])));

	string	$verts[];
	string 	$v0[]=`polyListComponentConversion -tv $edges[0]`;
		$v0=`ls -fl $v0`;
	string 	$v1[]=`polyListComponentConversion -tv $edges[1]`;
		$v1=`ls -fl $v1`;
		$v0=`stringArrayRemove $v1 $v0`;
		$verts[0]=$v0[0];
		
		for($i=0;$i<size($edges);$i++)
		{
			string 	$v0[]=`polyListComponentConversion -tv $edges[$i]`;
			
				$v0=`ls -fl $v0`;
				$v0=`stringArrayRemove $verts $v0`;
				$verts[size($verts)]=$v0[0];
		}
		
	return	$verts;
}