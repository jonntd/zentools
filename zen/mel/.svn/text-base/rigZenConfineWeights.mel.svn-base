global proc int rigZenConfineWeights(int $recursive, string $weightType)
{
	float	$tol=.0001;

	//find selected vertices	
	
	string	$vertices[]=`polyListComponentConversion -tv`;
		
	//find skin
	
	string	$objects[]=stringArrayRemoveDuplicates(`ls -o $vertices`);
	
		if(size($objects)>1) error("Vertices must be on the same mesh.");

	string	$obj=$objects[0];
	string	$skin;
	string	$skins[];
	
		if($weightType=="smoothSkin")
			$skins=`ls -type skinCluster (listHistory($obj))`;
		else
		if(`pluginInfo -q -l MayaMuscle`)
			$skins=`ls -type cMuscleSystem (listHistory($obj))`;
		
		$skin=$skins[0];
		
	//find selected influences
	
	string	$influences[];
		
		$influences=stringArrayCatenate(ls("-sl"),listRelatives("-s",(ls("-sl"))));
	
		if($recursive) $influences=stringArrayCatenate(ls("-sl"),stringArrayCatenate(`listRelatives -ad (ls("-sl"))`,listRelatives("-s",`listRelatives -ad (ls("-sl"))`)));
				
		$influences=`stringArrayRemoveDuplicates $influences`;
		
	string	$allInfluences[];
		
		if($weightType=="smoothSkin")
		{
			$allInfluences=`listConnections -s 1 -d 0 ($skin+".matrix")`;
		}
		else
		{
			for($s in $skins)
			{
				$allInfluences=stringArrayCatenate($allInfluences,`listConnections -sh 1 -s 1 -d 0 ($s+".muscleData")`);
			}
			$allInfluences=stringArrayRemoveDuplicates($allInfluences);
		}

		$influences=zenStringArrayIntersect($influences,$allInfluences);
		
	string	$zeroInfluences[]=stringArrayRemove($influences,$allInfluences);
	
	int	$lockSticky[];
	int	$lockSliding[];
		                                                  
		if($weightType!="smoothSkin")
		{
			for($i=0;$i<size($zeroInfluences);$i++)
			{
				$lockSticky[$i]=`getAttr ($zeroInfluences[$i]+".lockStickyWt")`;
				setAttr($zeroInfluences[$i]+".lockStickyWt",0);
				$lockSliding[$i]=`getAttr($zeroInfluences[$i]+".lockSlidingWt")`;
				setAttr($zeroInfluences[$i]+".lockSlidingWt",0);
			}
		}
	
	int	$normalizeWeights;
	string	$command;
	
		if($weightType=="smoothSkin")
		{
			$normalizeWeights=`getAttr ($skin+".normalizeWeights")`;
			
			setAttr ($skin+".normalizeWeights") true;
			
			$command="skinPercent -nrm true ";
		
			//clear out all other influences
			for($z in $zeroInfluences) $command=$command+"-tv "+$z+" 0 ";
		
			eval($command+$skin+" "+(zenReturnStringArrayFormat($vertices)));
							
			setAttr ($skin+".normalizeWeights") $normalizeWeights;
		}
		else
		{
			for($s in $skins)
			{
				$command="";
		
				//clear out all other influences
				for($z in $zeroInfluences)
				{
					select $vertices;
					cMuscleWeight 
						-system $s
						-n true
						-mus $z
						-wt $weightType
						-v 0;
				}
			}
		}
		
		if($weightType!="smoothSkin")
		{
			for($i=0;$i<size($zeroInfluences);$i++)
			{
				if($lockSticky[$i])
					setAttr($zeroInfluences[$i]+".lockStickyWt",$lockSticky[$i]);
				if($lockSliding[$i])
					setAttr($zeroInfluences[$i]+".lockSlidingWt",$lockSliding[$i]);
			}
		}
		
	return	1;
}