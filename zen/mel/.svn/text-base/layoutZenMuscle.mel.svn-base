global proc zenMuscleExecute()
{
	global	int	$zenOptions_muscleReflect,
			$zenOptions_muscleReflectAxis,
			$zenOptions_muscleJiggle,
			$zenOptions_muscleScript,
			$zenOptions_muscleSpans;
							
	global	string	$zenMuscleSelections[];
			
	int	$axis;
			
		if($zenOptions_muscleReflect)
			$axis=$zenOptions_muscleReflectAxis;
		else
			$axis=0;
		
		int	$err=catch(`rigZenMuscle $zenMuscleSelections $axis $zenOptions_muscleJiggle $zenOptions_muscleSpans`);
		
			if($err) zenDeferCommand("undoInfo -swf 1");
}

global proc zenMuscleAddSelectionGroup(string $column)
{
	global	string	$zenMuscleSelections[];
	global	string	$zenMuscleSelectionButtons[];
	
	int	$buttonNum=size($zenMuscleSelectionButtons);
	
	string	$command=
		(
		
			"$zenMuscleSelections["+(string($buttonNum))+"]=stringArrayToString(`ls -sl`,\",\");\n"+
			
			"if(size(`ls -sl`))\n"+
			"{\n"+

			//check selection validity
			
			"	if\n"+
			"	(\n"+
			"		size\n"+
			"		(\n"+
			"			stringArrayCatenate\n"+
			"			(\n"+
			"				polyListComponentConversion\n"+
			"				(\n"+
			"					\"-fe\",\n"+
			"					\"-te\",\n"+
			"					stringArrayRemove(stringArrayCatenate(`ls -type transform`,`ls -type shape`),`ls -sl`)\n"+
			"				),\n"+
			"				stringArrayCatenate\n"+
			"				(\n"+
			"					(ls(\"-type\",\"nurbsCurve\",`listRelatives -s -ni`)),\n"+
			"					`ls -type nurbsCurve -sl`\n"+
			"				)\n"+
			"			)\n"+
			"		) &&\n"+
			"		size(`ls -type joint -sl`)\n"+
			"	)\n"+
			"		button -e -l \"Selection Group "+(string($buttonNum+1))+" Set\" $zenMuscleSelectionButtons["+(string($buttonNum))+"];\n"+
			"	else\n"+
			"		button -e -l \"Selection Group "+(string($buttonNum+1))+" is Invalid\" $zenMuscleSelectionButtons["+(string($buttonNum))+"];\n"+
			"}\n"+
			"else\n"+
			"	button -e -l \"Selection Group "+(string($buttonNum+1))+" is empty\" $zenMuscleSelectionButtons["+(string($buttonNum))+"];\n"+

			"if("+(string($buttonNum+1))+"==size($zenMuscleSelectionButtons))\n"+
			"	zenMuscleAddSelectionGroup "+$column+";"		
		);
				
		$zenMuscleSelectionButtons[$buttonNum]=`button -p $column -l "Add Selection Group" -c $command`;
		
		separator -p $column;
}

global proc layoutZenMuscle()
{
	global	int	$zenOptions_muscleReflect,
			$zenOptions_muscleReflectAxis,
			$zenOptions_muscleJiggle,
			$zenOptions_muscleScript,
			$zenOptions_muscleSpans;
								
	global 	int 	$zenMinimumWindowWidth;

	global 	string 	$zenToolsWindow;
	
	string	$mainLayout=`zenClearToolColumn`;
	
		window -e -title "ZenTools-Muscle" $zenToolsWindow;
		
		layout -e -h 1 -w 185 $mainLayout;
				
		floatSliderGrp
			-w $zenMinimumWindowWidth
			-f true
			-cw3 50 50 50
			-cl3 left left left
			-adj 3
			-l " Spans"
			-min 3
			-max 20
			-v $zenOptions_muscleSpans 
			-cc "$zenOptions_muscleSpans=`floatSliderGrp -q -v zenOptions_muscleSpans`"
			zenOptions_muscleSpans;
	
		separator -p $mainLayout -w $zenMinimumWindowWidth;
		
		checkBoxGrp
			-p $mainLayout
			-ncb 2
			-cw2 100 100
			-l1 "Mirror Muscle"
			-l2 "Create Jiggle"
			-cl2 left left
			-v1 $zenOptions_muscleReflect
			-v2 $zenOptions_muscleJiggle
			-cc1
			(
				"$zenOptions_muscleReflect=`checkBoxGrp -q -v1 zenOptions_muscleJiggleReflect`;\n"+
				"radioButtonGrp -e -en $zenOptions_muscleReflect zenOptions_muscleReflectAxis"
			)
			-cc2 "$zenOptions_muscleJiggle=`checkBoxGrp -q -v2 zenOptions_muscleJiggleReflect`;"
			zenOptions_muscleJiggleReflect;
	
		separator -p $mainLayout -w $zenMinimumWindowWidth;
		
		text -p $mainLayout -align left "Mirror Axis";
			
		radioButtonGrp
			-p $mainLayout
			-en $zenOptions_muscleReflect
			-cw3 100 100 50
			-numberOfRadioButtons 3
			-l1 "x" 
			-l2 "y" 
			-l3 "z"
			-select $zenOptions_muscleReflectAxis
			-cc "$zenOptions_muscleReflectAxis=int(`radioButtonGrp -q -sl zenOptions_muscleReflectAxis`)"
			zenOptions_muscleReflectAxis;	
			
		separator -p $mainLayout;
		
	string	$selectionButtonsColumn=`columnLayout -p $mainLayout -adj 1`;
	
	global	string	$zenMuscleSelections[];
	global	string	$zenMuscleSelectionButtons[];
	
		clear $zenMuscleSelections;
		clear $zenMuscleSelectionButtons;
		
		zenMuscleAddSelectionGroup $selectionButtonsColumn;
		
		button -p $mainLayout -c zenMuscleExecute -l "Create Muscle";
}

		
		
		
		

