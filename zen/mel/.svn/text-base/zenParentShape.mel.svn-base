//parent the shape beneath the first transform to the second transform
global proc int zenParentShape(string $sel[])
{
	string	$targetTr=$sel[(size($sel)-1)];
	
		if(!(size(`ls -tr $targetTr`))) $targetTr=zenReturnFirstStringItem(`listRelatives -p $targetTr`);
		
	string	$sourceTr[]=`stringArrayRemove {$targetTr,($sel[size($sel)-1])} $sel`;
	string	$sourceSh[]=stringArrayCatenate(`ls -typ shape $sourceTr`,`listRelatives -s $sourceTr`);
	string	$tr[];
	
		for($i=0;$i<size($sourceTr);$i++)
		{
			$tr=`listRelatives -p $sourceSh[$i]`;
			parent $tr $targetTr;
			makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 $sourceTr[$i];
			parent -s -r -add $sourceSh[$i] $targetTr;
			delete $tr;
		}
		
	return 1;
}
